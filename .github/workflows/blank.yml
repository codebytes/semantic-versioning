# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Git Semantic Version
        # You may pin to the exact commit or the version.
        # uses: PaulHatch/semantic-version@a8f8f59fd7f0625188492e945240f12d7ad2dca3
        id: generate-version
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: 'v'
          # If true, the branch will be used to select the maximum version
          version_from_branch: true # optional, default is false
          # Pattern to use when formatting output version
          version_format: "v${major}.${minor}.${patch}"
          # If true, every commit will be treated as a bump to the version.
          bump_each_commit: true # default is false
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false # default is false
          debug: true
      - name: Add output to env
        run : echo "version=${{ steps.generate-version.outputs.version }}" >> "$GITHUB_ENV"
      - name: printenv
        run: printenv
      - name: Create tag and push
        run: git tag ${{ steps.generate-version.outputs.version }} && git push --tags
